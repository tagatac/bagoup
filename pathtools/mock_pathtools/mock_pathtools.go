// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/tagatac/bagoup/pathtools (interfaces: PathTools)

// Package mock_pathtools is a generated GoMock package.
package mock_pathtools

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPathTools is a mock of PathTools interface.
type MockPathTools struct {
	ctrl     *gomock.Controller
	recorder *MockPathToolsMockRecorder
}

// MockPathToolsMockRecorder is the mock recorder for MockPathTools.
type MockPathToolsMockRecorder struct {
	mock *MockPathTools
}

// NewMockPathTools creates a new mock instance.
func NewMockPathTools(ctrl *gomock.Controller) *MockPathTools {
	mock := &MockPathTools{ctrl: ctrl}
	mock.recorder = &MockPathToolsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPathTools) EXPECT() *MockPathToolsMockRecorder {
	return m.recorder
}

// GetHomeDir mocks base method.
func (m *MockPathTools) GetHomeDir() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHomeDir")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetHomeDir indicates an expected call of GetHomeDir.
func (mr *MockPathToolsMockRecorder) GetHomeDir() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHomeDir", reflect.TypeOf((*MockPathTools)(nil).GetHomeDir))
}

// ReplaceTilde mocks base method.
func (m *MockPathTools) ReplaceTilde(arg0 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReplaceTilde", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// ReplaceTilde indicates an expected call of ReplaceTilde.
func (mr *MockPathToolsMockRecorder) ReplaceTilde(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReplaceTilde", reflect.TypeOf((*MockPathTools)(nil).ReplaceTilde), arg0)
}
